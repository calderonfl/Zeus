@model Kadabra.Model.Stadium.StadiumModel

@{
    ViewBag.TitleOption = "Países / Editar";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<div class="container">
    <div class="card">
        <div class="card-header">Crear País</div>
        <div class="card-body">
            @using (Html.BeginForm("SaveStadium", "Stadium", FormMethod.Post))
            {
                @Html.AntiForgeryToken()
                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Id)
                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col" })
                        <div class="col">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", placeholder = "Nombre" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col" })
                        <div class="col">
                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", placeholder = "Descripción" } })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Capacity, htmlAttributes: new { @class = "control-label col" })
                        <div class="col">
                            @Html.EditorFor(model => model.Capacity, new { htmlAttributes = new { @class = "form-control", placeholder = "Capacidad" } })
                            @Html.ValidationMessageFor(model => model.Capacity, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <br />
                    <div class="row justify-content-center align-items-center">
                        <div class="form-group">
                            <div class="col">
                                <button type="submit" class="btn-sm btn-outline-primary" formmethod="post">
                                    <i class="fa fa-fw fa-save"></i>Guardar
                                </button>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col">
                                <button type="button" onclick="location.href='@Url.Action("Index", "Stadium")'" class="btn-sm btn-outline-secondary">
                                    <i class="fa fa-fw fa-backward"></i>Regresar
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

